#include <stdio.h>
#include <stdlib.h>
void data_term_addz(float distxz_nK[],float arrmin_xz_n[],int n,int K,float dataterm_add_K[]);

void data_term_addz(float distxz_nK[],float arrmin_xz_n[],int n,int K,float dataterm_add_K[]){
	int k,j;
	float a,aj;
	for (k=0;k<K;k++){
		a=0;
		for (j=0;j<n;j++){
			aj = distxz_nK[j*K+k]-arrmin_xz_n[j];
			if (aj<0){
				a = a+aj;
			}
		dataterm_add_K[k]=a;
		}
	}
}

void view_mat(float mat[],int N,int M){
    int i, j;
    for (i = 0; i < N; i++){
        for (j = 0; j < M; j++){
            printf("%f\t", mat[i*M+j]);
        }
        printf("\n");
    }
}

void view_ary(int *list,const int n){
    int i;
    for(i=0; i<n; i++)
        printf("%d\t",list[i]);
    printf("\n");
}
void view_ary_float(float *list,const int n){
    int i;
    for(i=0; i<n; i++)
        printf("%f\n",list[i]);
    printf("\n");
}

int main ()
{
    // declare 4x3 array
int n=4;
int K=10;
float dxz_nK[n*K];
float arrmin_n[n];
int i, j;
for (i = 0; i < n; i++){
	for (j = 0; j < K; j++){
		dxz_nK[i*K+j]=rand()%10;
	}
	arrmin_n[i] = rand()%10;
}
printf("Printing the Matrix: \n");
view_mat(dxz_nK,n,K);
printf("Printing the Matrix: \n");
view_ary_float(arrmin_n,n);
float *dterm_add_K = malloc(sizeof(float)*K);

data_term_addz(dxz_nK,arrmin_n, n, K,dterm_add_K);
printf("Printing the Array: \n");
view_ary_float(dterm_add_K,K);

return 0;

}